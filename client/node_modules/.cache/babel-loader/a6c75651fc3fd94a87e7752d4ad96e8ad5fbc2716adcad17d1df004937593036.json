{"ast":null,"code":"var _jsxFileName = \"/Users/clarafication/Desktop/MY NEW NEW COMPUTER/Coding/E-Commerce-Tax-Calculator/client/src/pages/TaxRuleManagement/TaxRuleManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaxRuleManagement = () => {\n  _s();\n  const [taxRules, setTaxRules] = useState([]);\n  const [jurisdictions, setJurisdictions] = useState([]);\n  const [newTaxRule, setNewTaxRule] = useState({\n    jurisdiction_id: '',\n    rule_name: '',\n    rule_description: '',\n    rule_logic: {\n      exemptProductTypes: [],\n      specialRates: []\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Mock data for demonstration\n  useEffect(() => {\n    // In a real app, this would fetch from your API\n    const mockJurisdictions = [{\n      id: 1,\n      name: 'California'\n    }, {\n      id: 2,\n      name: 'New York'\n    }, {\n      id: 3,\n      name: 'Texas'\n    }, {\n      id: 4,\n      name: 'Ontario'\n    }, {\n      id: 5,\n      name: 'United Kingdom'\n    }];\n    const mockTaxRules = [{\n      id: 1,\n      jurisdiction_id: 1,\n      jurisdiction_name: 'California',\n      rule_name: 'Digital Products Exemption',\n      rule_description: 'Some digital products are exempt from sales tax in California',\n      rule_logic: {\n        exemptProductTypes: ['E-book', 'Digital Media']\n      }\n    }, {\n      id: 2,\n      jurisdiction_id: 5,\n      jurisdiction_name: 'United Kingdom',\n      rule_name: 'Zero-rated Publications',\n      rule_description: 'Certain digital publications are zero-rated in the UK',\n      rule_logic: {\n        exemptProductTypes: ['E-book'],\n        conditions: [{\n          field: 'name',\n          operator: 'not_contains',\n          value: 'game'\n        }]\n      }\n    }];\n    setJurisdictions(mockJurisdictions);\n    setTaxRules(mockTaxRules);\n    setLoading(false);\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTaxRule({\n      ...newTaxRule,\n      [name]: value\n    });\n  };\n  const handleExemptProductChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let updatedExemptProducts = [...newTaxRule.rule_logic.exemptProductTypes];\n    if (checked) {\n      updatedExemptProducts.push(value);\n    } else {\n      updatedExemptProducts = updatedExemptProducts.filter(type => type !== value);\n    }\n    setNewTaxRule({\n      ...newTaxRule,\n      rule_logic: {\n        ...newTaxRule.rule_logic,\n        exemptProductTypes: updatedExemptProducts\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // In a real app, this would send a POST request to your API\n    const selectedJurisdiction = jurisdictions.find(j => j.id === parseInt(newTaxRule.jurisdiction_id));\n    const mockNewTaxRule = {\n      ...newTaxRule,\n      id: taxRules.length + 1,\n      jurisdiction_id: parseInt(newTaxRule.jurisdiction_id),\n      jurisdiction_name: selectedJurisdiction ? selectedJurisdiction.name : 'Unknown'\n    };\n    setTaxRules([...taxRules, mockNewTaxRule]);\n    setNewTaxRule({\n      jurisdiction_id: '',\n      rule_name: '',\n      rule_description: '',\n      rule_logic: {\n        exemptProductTypes: [],\n        specialRates: []\n      }\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tax rules...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading tax rules: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tax-rule-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tax Rule Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"add-tax-rule\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Tax Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"jurisdiction_id\",\n            children: \"Jurisdiction:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"jurisdiction_id\",\n            name: \"jurisdiction_id\",\n            value: newTaxRule.jurisdiction_id,\n            onChange: handleInputChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Jurisdiction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), jurisdictions.map(jurisdiction => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: jurisdiction.id,\n              children: jurisdiction.name\n            }, jurisdiction.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rule_name\",\n            children: \"Rule Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"rule_name\",\n            name: \"rule_name\",\n            value: newTaxRule.rule_name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rule_description\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"rule_description\",\n            name: \"rule_description\",\n            value: newTaxRule.rule_description,\n            onChange: handleInputChange,\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Exempt Product Types:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-group\",\n            children: ['Digital Software', 'E-book', 'Online Course', 'Subscription Service', 'Digital Media', 'Other'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `exempt-${type}`,\n                name: `exempt-${type}`,\n                value: type,\n                checked: newTaxRule.rule_logic.exemptProductTypes.includes(type),\n                onChange: handleExemptProductChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `exempt-${type}`,\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Add Tax Rule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tax-rules-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Existing Tax Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Jurisdiction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rule Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exempt Product Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: taxRules.map(taxRule => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: taxRule.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: taxRule.jurisdiction_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: taxRule.rule_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: taxRule.rule_description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: taxRule.rule_logic.exemptProductTypes && taxRule.rule_logic.exemptProductTypes.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-small\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-small btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, taxRule.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(TaxRuleManagement, \"AzXSMoRM7bG5X3ABJhOD0iu7bOw=\");\n_c = TaxRuleManagement;\nexport default TaxRuleManagement;\nvar _c;\n$RefreshReg$(_c, \"TaxRuleManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaxRuleManagement","_s","taxRules","setTaxRules","jurisdictions","setJurisdictions","newTaxRule","setNewTaxRule","jurisdiction_id","rule_name","rule_description","rule_logic","exemptProductTypes","specialRates","loading","setLoading","error","setError","mockJurisdictions","id","name","mockTaxRules","jurisdiction_name","conditions","field","operator","value","handleInputChange","e","target","handleExemptProductChange","checked","updatedExemptProducts","push","filter","type","handleSubmit","preventDefault","selectedJurisdiction","find","j","parseInt","mockNewTaxRule","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","onChange","required","map","jurisdiction","rows","includes","taxRule","join","_c","$RefreshReg$"],"sources":["/Users/clarafication/Desktop/MY NEW NEW COMPUTER/Coding/E-Commerce-Tax-Calculator/client/src/pages/TaxRuleManagement/TaxRuleManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TaxRuleManagement = () => {\n  const [taxRules, setTaxRules] = useState([]);\n  const [jurisdictions, setJurisdictions] = useState([]);\n  const [newTaxRule, setNewTaxRule] = useState({\n    jurisdiction_id: '',\n    rule_name: '',\n    rule_description: '',\n    rule_logic: {\n      exemptProductTypes: [],\n      specialRates: []\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Mock data for demonstration\n  useEffect(() => {\n    // In a real app, this would fetch from your API\n    const mockJurisdictions = [\n      { id: 1, name: 'California' },\n      { id: 2, name: 'New York' },\n      { id: 3, name: 'Texas' },\n      { id: 4, name: 'Ontario' },\n      { id: 5, name: 'United Kingdom' }\n    ];\n    \n    const mockTaxRules = [\n      { \n        id: 1, \n        jurisdiction_id: 1, \n        jurisdiction_name: 'California', \n        rule_name: 'Digital Products Exemption', \n        rule_description: 'Some digital products are exempt from sales tax in California',\n        rule_logic: {\n          exemptProductTypes: ['E-book', 'Digital Media']\n        }\n      },\n      { \n        id: 2, \n        jurisdiction_id: 5, \n        jurisdiction_name: 'United Kingdom', \n        rule_name: 'Zero-rated Publications', \n        rule_description: 'Certain digital publications are zero-rated in the UK',\n        rule_logic: {\n          exemptProductTypes: ['E-book'],\n          conditions: [\n            { field: 'name', operator: 'not_contains', value: 'game' }\n          ]\n        }\n      }\n    ];\n    \n    setJurisdictions(mockJurisdictions);\n    setTaxRules(mockTaxRules);\n    setLoading(false);\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTaxRule({\n      ...newTaxRule,\n      [name]: value\n    });\n  };\n\n  const handleExemptProductChange = (e) => {\n    const { value, checked } = e.target;\n    let updatedExemptProducts = [...newTaxRule.rule_logic.exemptProductTypes];\n    \n    if (checked) {\n      updatedExemptProducts.push(value);\n    } else {\n      updatedExemptProducts = updatedExemptProducts.filter(type => type !== value);\n    }\n    \n    setNewTaxRule({\n      ...newTaxRule,\n      rule_logic: {\n        ...newTaxRule.rule_logic,\n        exemptProductTypes: updatedExemptProducts\n      }\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // In a real app, this would send a POST request to your API\n    const selectedJurisdiction = jurisdictions.find(j => j.id === parseInt(newTaxRule.jurisdiction_id));\n    \n    const mockNewTaxRule = {\n      ...newTaxRule,\n      id: taxRules.length + 1,\n      jurisdiction_id: parseInt(newTaxRule.jurisdiction_id),\n      jurisdiction_name: selectedJurisdiction ? selectedJurisdiction.name : 'Unknown'\n    };\n    \n    setTaxRules([...taxRules, mockNewTaxRule]);\n    setNewTaxRule({\n      jurisdiction_id: '',\n      rule_name: '',\n      rule_description: '',\n      rule_logic: {\n        exemptProductTypes: [],\n        specialRates: []\n      }\n    });\n  };\n\n  if (loading) return <div>Loading tax rules...</div>;\n  if (error) return <div>Error loading tax rules: {error}</div>;\n\n  return (\n    <div className=\"tax-rule-management\">\n      <h1>Tax Rule Management</h1>\n      \n      <section className=\"add-tax-rule\">\n        <h2>Add New Tax Rule</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"jurisdiction_id\">Jurisdiction:</label>\n            <select\n              id=\"jurisdiction_id\"\n              name=\"jurisdiction_id\"\n              value={newTaxRule.jurisdiction_id}\n              onChange={handleInputChange}\n              required\n            >\n              <option value=\"\">Select Jurisdiction</option>\n              {jurisdictions.map(jurisdiction => (\n                <option key={jurisdiction.id} value={jurisdiction.id}>\n                  {jurisdiction.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"rule_name\">Rule Name:</label>\n            <input\n              type=\"text\"\n              id=\"rule_name\"\n              name=\"rule_name\"\n              value={newTaxRule.rule_name}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"rule_description\">Description:</label>\n            <textarea\n              id=\"rule_description\"\n              name=\"rule_description\"\n              value={newTaxRule.rule_description}\n              onChange={handleInputChange}\n              rows=\"3\"\n            ></textarea>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Exempt Product Types:</label>\n            <div className=\"checkbox-group\">\n              {['Digital Software', 'E-book', 'Online Course', 'Subscription Service', 'Digital Media', 'Other'].map(type => (\n                <div key={type} className=\"checkbox-item\">\n                  <input\n                    type=\"checkbox\"\n                    id={`exempt-${type}`}\n                    name={`exempt-${type}`}\n                    value={type}\n                    checked={newTaxRule.rule_logic.exemptProductTypes.includes(type)}\n                    onChange={handleExemptProductChange}\n                  />\n                  <label htmlFor={`exempt-${type}`}>{type}</label>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          <button type=\"submit\" className=\"btn btn-primary\">Add Tax Rule</button>\n        </form>\n      </section>\n      \n      <section className=\"tax-rules-list\">\n        <h2>Existing Tax Rules</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Jurisdiction</th>\n              <th>Rule Name</th>\n              <th>Description</th>\n              <th>Exempt Product Types</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {taxRules.map(taxRule => (\n              <tr key={taxRule.id}>\n                <td>{taxRule.id}</td>\n                <td>{taxRule.jurisdiction_name}</td>\n                <td>{taxRule.rule_name}</td>\n                <td>{taxRule.rule_description}</td>\n                <td>\n                  {taxRule.rule_logic.exemptProductTypes && \n                   taxRule.rule_logic.exemptProductTypes.join(', ')}\n                </td>\n                <td>\n                  <button className=\"btn btn-small\">Edit</button>\n                  <button className=\"btn btn-small btn-danger\">Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </section>\n    </div>\n  );\n};\n\nexport default TaxRuleManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}