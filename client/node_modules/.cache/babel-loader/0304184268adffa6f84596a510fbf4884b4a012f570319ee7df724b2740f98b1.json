{"ast":null,"code":"// Tax rates by jurisdiction\nexport const taxRates = {\n  'US-CA': {\n    rate: 8.5,\n    name: 'California'\n  },\n  'US-NY': {\n    rate: 8.875,\n    name: 'New York'\n  },\n  'US-TX': {\n    rate: 6.25,\n    name: 'Texas'\n  },\n  'US-FL': {\n    rate: 6.0,\n    name: 'Florida'\n  },\n  'CA-ON': {\n    rate: 13.0,\n    name: 'Ontario'\n  },\n  'CA-BC': {\n    rate: 12.0,\n    name: 'British Columbia'\n  },\n  'CA-QC': {\n    rate: 14.975,\n    name: 'Quebec'\n  },\n  'UK-': {\n    rate: 20.0,\n    name: 'United Kingdom'\n  }\n};\n\n// Tax exemption rules\nexport const taxRules = {\n  'US-CA': [{\n    name: 'Digital Products Exemption',\n    description: 'Some digital products are exempt from sales tax in California',\n    applies: product => ['E-book', 'Digital Media'].includes(product.type),\n    modify: rate => 0 // Exempt\n  }, {\n    name: 'SaaS Rule',\n    description: 'SaaS products are taxable in California',\n    applies: product => product.type === 'Digital Software' && product.name.toLowerCase().includes('saas'),\n    modify: rate => rate // Standard rate\n  }],\n  'US-NY': [{\n    name: 'Information Services',\n    description: 'Information services are taxable in New York',\n    applies: product => product.type === 'Online Course' || product.type === 'Subscription Service',\n    modify: rate => rate\n  }],\n  'UK-': [{\n    name: 'Zero-rated Publications',\n    description: 'Certain digital publications are zero-rated in the UK',\n    applies: product => product.type === 'E-book' && !product.name.toLowerCase().includes('game'),\n    modify: rate => 0\n  }]\n};\n\n// Calculate tax for a product with rules applied\nexport const calculateTaxWithRules = (product, location) => {\n  var _taxRates$locationKey;\n  const locationKey = `${location.country}-${location.state}`;\n  let taxRate = ((_taxRates$locationKey = taxRates[locationKey]) === null || _taxRates$locationKey === void 0 ? void 0 : _taxRates$locationKey.rate) || 0;\n\n  // Check if any rules apply\n  const rules = taxRules[locationKey] || [];\n  let exemptionApplied = false;\n  let exemptionName = '';\n  for (const rule of rules) {\n    if (rule.applies(product)) {\n      const originalRate = taxRate;\n      taxRate = rule.modify(taxRate);\n\n      // If rate was reduced to 0, it's an exemption\n      if (originalRate > 0 && taxRate === 0) {\n        exemptionApplied = true;\n        exemptionName = rule.name;\n      }\n      break; // Apply first matching rule\n    }\n  }\n\n  // Calculate tax amount\n  const price = typeof product.price === 'string' ? parseFloat(product.price) : product.price;\n  const subtotal = price * product.quantity;\n  const taxAmount = subtotal * (taxRate / 100);\n  return {\n    taxRate,\n    taxAmount,\n    exemptionApplied,\n    exemptionName\n  };\n};\n\n// Calculate tax for multiple products\nexport const calculateTax = (products, location) => {\n  var _taxRates$locationKey2, _taxRates$locationKey3;\n  // Validate inputs\n  if (!products.length) {\n    throw new Error('No products provided');\n  }\n  if (!location.country) {\n    throw new Error('Customer location is required');\n  }\n\n  // Calculate subtotal and tax for each product\n  let subtotal = 0;\n  let totalTaxAmount = 0;\n  const appliedRules = [];\n  products.forEach(product => {\n    const price = typeof product.price === 'string' ? parseFloat(product.price) : product.price;\n    const productSubtotal = price * product.quantity;\n    subtotal += productSubtotal;\n    const {\n      taxRate,\n      taxAmount,\n      exemptionApplied,\n      exemptionName\n    } = calculateTaxWithRules(product, location);\n    totalTaxAmount += taxAmount;\n    if (exemptionApplied) {\n      appliedRules.push({\n        name: exemptionName,\n        description: `Tax exemption applied to ${product.name}`,\n        productId: product.id,\n        productName: product.name\n      });\n    }\n  });\n\n  // Calculate total\n  const total = subtotal + totalTaxAmount;\n\n  // Get jurisdiction name\n  const locationKey = `${location.country}-${location.state}`;\n  const jurisdictionName = ((_taxRates$locationKey2 = taxRates[locationKey]) === null || _taxRates$locationKey2 === void 0 ? void 0 : _taxRates$locationKey2.name) || 'Unknown';\n  return {\n    subtotal: subtotal.toFixed(2),\n    taxRate: ((_taxRates$locationKey3 = taxRates[locationKey]) === null || _taxRates$locationKey3 === void 0 ? void 0 : _taxRates$locationKey3.rate) || 0,\n    taxAmount: totalTaxAmount.toFixed(2),\n    total: total.toFixed(2),\n    jurisdiction: jurisdictionName,\n    products: [...products],\n    appliedRules: appliedRules.length ? appliedRules : undefined\n  };\n};\n\n// Determine if a company has nexus in a jurisdiction\nexport const determineNexus = (company, jurisdiction) => {\n  // Economic nexus thresholds by state\n  const thresholds = {\n    'US-CA': {\n      revenue: 500000,\n      transactions: 200\n    },\n    'US-NY': {\n      revenue: 500000,\n      transactions: 100\n    },\n    'US-TX': {\n      revenue: 500000,\n      transactions: 0\n    },\n    'US-FL': {\n      revenue: 100000,\n      transactions: 200\n    }\n  };\n\n  // Check if company exceeds thresholds\n  const stateData = company.salesByState[jurisdiction] || {\n    revenue: 0,\n    transactions: 0\n  };\n  const threshold = thresholds[jurisdiction];\n  if (!threshold) return false;\n  return stateData.revenue >= threshold.revenue || threshold.transactions > 0 && stateData.transactions >= threshold.transactions;\n};\n\n// Calculate VAT for international sales\nexport const calculateVAT = (product, customerLocation) => {\n  const vatRates = {\n    'UK': 20,\n    'EU-DE': 19,\n    'EU-FR': 20,\n    'EU-ES': 21\n  };\n\n  // B2B vs B2C determination (affects VAT in EU)\n  const isB2B = customerLocation.vatId ? true : false;\n\n  // Reverse charge mechanism for B2B within EU\n  if (isB2B && customerLocation.country.startsWith('EU-')) {\n    return 0; // Reverse charge applies\n  }\n  return vatRates[customerLocation.country] || 0;\n};","map":{"version":3,"names":["taxRates","rate","name","taxRules","description","applies","product","includes","type","modify","toLowerCase","calculateTaxWithRules","location","_taxRates$locationKey","locationKey","country","state","taxRate","rules","exemptionApplied","exemptionName","rule","originalRate","price","parseFloat","subtotal","quantity","taxAmount","calculateTax","products","_taxRates$locationKey2","_taxRates$locationKey3","length","Error","totalTaxAmount","appliedRules","forEach","productSubtotal","push","productId","id","productName","total","jurisdictionName","toFixed","jurisdiction","undefined","determineNexus","company","thresholds","revenue","transactions","stateData","salesByState","threshold","calculateVAT","customerLocation","vatRates","isB2B","vatId","startsWith"],"sources":["/Users/clarafication/Desktop/MY NEW NEW COMPUTER/Coding/-Commerce-Tax-Calculator/client/src/services/TaxCalculation/taxCalculationService.js"],"sourcesContent":["// Tax rates by jurisdiction\nexport const taxRates = {\n  'US-CA': { rate: 8.5, name: 'California' },\n  'US-NY': { rate: 8.875, name: 'New York' },\n  'US-TX': { rate: 6.25, name: 'Texas' },\n  'US-FL': { rate: 6.0, name: 'Florida' },\n  'CA-ON': { rate: 13.0, name: 'Ontario' },\n  'CA-BC': { rate: 12.0, name: 'British Columbia' },\n  'CA-QC': { rate: 14.975, name: 'Quebec' },\n  'UK-': { rate: 20.0, name: 'United Kingdom' },\n};\n\n// Tax exemption rules\nexport const taxRules = {\n  'US-CA': [\n    { \n      name: 'Digital Products Exemption',\n      description: 'Some digital products are exempt from sales tax in California',\n      applies: (product) => ['E-book', 'Digital Media'].includes(product.type),\n      modify: (rate) => 0 // Exempt\n    },\n    {\n      name: 'SaaS Rule',\n      description: 'SaaS products are taxable in California',\n      applies: (product) => \n        product.type === 'Digital Software' && \n        product.name.toLowerCase().includes('saas'),\n      modify: (rate) => rate // Standard rate\n    }\n  ],\n  'US-NY': [\n    {\n      name: 'Information Services',\n      description: 'Information services are taxable in New York',\n      applies: (product) => \n        product.type === 'Online Course' || \n        product.type === 'Subscription Service',\n      modify: (rate) => rate\n    }\n  ],\n  'UK-': [\n    {\n      name: 'Zero-rated Publications',\n      description: 'Certain digital publications are zero-rated in the UK',\n      applies: (product) => \n        product.type === 'E-book' && \n        !product.name.toLowerCase().includes('game'),\n      modify: (rate) => 0\n    }\n  ]\n};\n\n// Calculate tax for a product with rules applied\nexport const calculateTaxWithRules = (product, location) => {\n  const locationKey = `${location.country}-${location.state}`;\n  let taxRate = taxRates[locationKey]?.rate || 0;\n  \n  // Check if any rules apply\n  const rules = taxRules[locationKey] || [];\n  let exemptionApplied = false;\n  let exemptionName = '';\n  \n  for (const rule of rules) {\n    if (rule.applies(product)) {\n      const originalRate = taxRate;\n      taxRate = rule.modify(taxRate);\n      \n      // If rate was reduced to 0, it's an exemption\n      if (originalRate > 0 && taxRate === 0) {\n        exemptionApplied = true;\n        exemptionName = rule.name;\n      }\n      \n      break; // Apply first matching rule\n    }\n  }\n  \n  // Calculate tax amount\n  const price = typeof product.price === 'string' ? parseFloat(product.price) : product.price;\n  const subtotal = price * product.quantity;\n  const taxAmount = subtotal * (taxRate / 100);\n  \n  return { \n    taxRate, \n    taxAmount, \n    exemptionApplied, \n    exemptionName \n  };\n};\n\n// Calculate tax for multiple products\nexport const calculateTax = (products, location) => {\n  // Validate inputs\n  if (!products.length) {\n    throw new Error('No products provided');\n  }\n  \n  if (!location.country) {\n    throw new Error('Customer location is required');\n  }\n  \n  // Calculate subtotal and tax for each product\n  let subtotal = 0;\n  let totalTaxAmount = 0;\n  const appliedRules = [];\n  \n  products.forEach(product => {\n    const price = typeof product.price === 'string' ? parseFloat(product.price) : product.price;\n    const productSubtotal = price * product.quantity;\n    subtotal += productSubtotal;\n    \n    const { taxRate, taxAmount, exemptionApplied, exemptionName } = calculateTaxWithRules(product, location);\n    totalTaxAmount += taxAmount;\n    \n    if (exemptionApplied) {\n      appliedRules.push({\n        name: exemptionName,\n        description: `Tax exemption applied to ${product.name}`,\n        productId: product.id,\n        productName: product.name\n      });\n    }\n  });\n  \n  // Calculate total\n  const total = subtotal + totalTaxAmount;\n  \n  // Get jurisdiction name\n  const locationKey = `${location.country}-${location.state}`;\n  const jurisdictionName = taxRates[locationKey]?.name || 'Unknown';\n  \n  return {\n    subtotal: subtotal.toFixed(2),\n    taxRate: taxRates[locationKey]?.rate || 0,\n    taxAmount: totalTaxAmount.toFixed(2),\n    total: total.toFixed(2),\n    jurisdiction: jurisdictionName,\n    products: [...products],\n    appliedRules: appliedRules.length ? appliedRules : undefined\n  };\n};\n\n// Determine if a company has nexus in a jurisdiction\nexport const determineNexus = (company, jurisdiction) => {\n  // Economic nexus thresholds by state\n  const thresholds = {\n    'US-CA': { revenue: 500000, transactions: 200 },\n    'US-NY': { revenue: 500000, transactions: 100 },\n    'US-TX': { revenue: 500000, transactions: 0 },\n    'US-FL': { revenue: 100000, transactions: 200 }\n  };\n  \n  // Check if company exceeds thresholds\n  const stateData = company.salesByState[jurisdiction] || { revenue: 0, transactions: 0 };\n  const threshold = thresholds[jurisdiction];\n  \n  if (!threshold) return false;\n  \n  return stateData.revenue >= threshold.revenue || \n         (threshold.transactions > 0 && stateData.transactions >= threshold.transactions);\n};\n\n// Calculate VAT for international sales\nexport const calculateVAT = (product, customerLocation) => {\n  const vatRates = {\n    'UK': 20,\n    'EU-DE': 19,\n    'EU-FR': 20,\n    'EU-ES': 21\n  };\n  \n  // B2B vs B2C determination (affects VAT in EU)\n  const isB2B = customerLocation.vatId ? true : false;\n  \n  // Reverse charge mechanism for B2B within EU\n  if (isB2B && customerLocation.country.startsWith('EU-')) {\n    return 0; // Reverse charge applies\n  }\n  \n  return vatRates[customerLocation.country] || 0;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}