{"ast":null,"code":"// Mock tax rate data and service functions\nconst mockTaxRates = [{\n  id: '1',\n  jurisdiction_id: '1',\n  product_type: 'Digital Software',\n  rate: 8.25,\n  effective_date: '2023-01-01',\n  end_date: ''\n}, {\n  id: '2',\n  jurisdiction_id: '2',\n  product_type: 'E-book',\n  rate: 4.5,\n  effective_date: '2023-01-01',\n  end_date: ''\n}, {\n  id: '3',\n  jurisdiction_id: '3',\n  product_type: 'Digital Media',\n  rate: 6.25,\n  effective_date: '2023-01-01',\n  end_date: ''\n}];\n\n// Get all tax rates\nexport const getTaxRates = async () => {\n  return [...mockTaxRates];\n};\n\n// Add a new tax rate\nexport const addTaxRate = async taxRateData => {\n  const newId = (Math.max(...mockTaxRates.map(t => parseInt(t.id))) + 1).toString();\n  const newTaxRate = {\n    ...taxRateData,\n    id: newId\n  };\n  mockTaxRates.push(newTaxRate);\n  return newTaxRate;\n};\n\n// Update a tax rate\nexport const updateTaxRate = async (id, taxRateData) => {\n  const index = mockTaxRates.findIndex(t => t.id === id);\n  if (index === -1) {\n    throw new Error('Tax rate not found');\n  }\n  mockTaxRates[index] = {\n    ...taxRateData,\n    id\n  };\n  return mockTaxRates[index];\n};\n\n// Delete a tax rate\nexport const deleteTaxRate = async id => {\n  const index = mockTaxRates.findIndex(t => t.id === id);\n  if (index === -1) {\n    throw new Error('Tax rate not found');\n  }\n  mockTaxRates.splice(index, 1);\n  return {\n    success: true\n  };\n};","map":{"version":3,"names":["mockTaxRates","id","jurisdiction_id","product_type","rate","effective_date","end_date","getTaxRates","addTaxRate","taxRateData","newId","Math","max","map","t","parseInt","toString","newTaxRate","push","updateTaxRate","index","findIndex","Error","deleteTaxRate","splice","success"],"sources":["/Users/clarafication/Desktop/MY NEW NEW COMPUTER/Coding/E-Commerce-Tax-Calculator/client/src/services/TaxRateService/taxRateService.js"],"sourcesContent":["// Mock tax rate data and service functions\nconst mockTaxRates = [\n  {\n    id: '1',\n    jurisdiction_id: '1',\n    product_type: 'Digital Software',\n    rate: 8.25,\n    effective_date: '2023-01-01',\n    end_date: ''\n  },\n  {\n    id: '2',\n    jurisdiction_id: '2',\n    product_type: 'E-book',\n    rate: 4.5,\n    effective_date: '2023-01-01',\n    end_date: ''\n  },\n  {\n    id: '3',\n    jurisdiction_id: '3',\n    product_type: 'Digital Media',\n    rate: 6.25,\n    effective_date: '2023-01-01',\n    end_date: ''\n  }\n];\n\n// Get all tax rates\nexport const getTaxRates = async () => {\n  return [...mockTaxRates];\n};\n\n// Add a new tax rate\nexport const addTaxRate = async (taxRateData) => {\n  const newId = (Math.max(...mockTaxRates.map(t => parseInt(t.id))) + 1).toString();\n  const newTaxRate = { ...taxRateData, id: newId };\n  mockTaxRates.push(newTaxRate);\n  return newTaxRate;\n};\n\n// Update a tax rate\nexport const updateTaxRate = async (id, taxRateData) => {\n  const index = mockTaxRates.findIndex(t => t.id === id);\n  if (index === -1) {\n    throw new Error('Tax rate not found');\n  }\n  mockTaxRates[index] = { ...taxRateData, id };\n  return mockTaxRates[index];\n};\n\n// Delete a tax rate\nexport const deleteTaxRate = async (id) => {\n  const index = mockTaxRates.findIndex(t => t.id === id);\n  if (index === -1) {\n    throw new Error('Tax rate not found');\n  }\n  mockTaxRates.splice(index, 1);\n  return { success: true };\n}; "],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,GAAG;EACPC,eAAe,EAAE,GAAG;EACpBC,YAAY,EAAE,kBAAkB;EAChCC,IAAI,EAAE,IAAI;EACVC,cAAc,EAAE,YAAY;EAC5BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,GAAG;EACPC,eAAe,EAAE,GAAG;EACpBC,YAAY,EAAE,QAAQ;EACtBC,IAAI,EAAE,GAAG;EACTC,cAAc,EAAE,YAAY;EAC5BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,GAAG;EACPC,eAAe,EAAE,GAAG;EACpBC,YAAY,EAAE,eAAe;EAC7BC,IAAI,EAAE,IAAI;EACVC,cAAc,EAAE,YAAY;EAC5BC,QAAQ,EAAE;AACZ,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAO,CAAC,GAAGP,YAAY,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAOC,WAAW,IAAK;EAC/C,MAAMC,KAAK,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC,GAAGZ,YAAY,CAACa,GAAG,CAACC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACb,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEe,QAAQ,CAAC,CAAC;EACjF,MAAMC,UAAU,GAAG;IAAE,GAAGR,WAAW;IAAER,EAAE,EAAES;EAAM,CAAC;EAChDV,YAAY,CAACkB,IAAI,CAACD,UAAU,CAAC;EAC7B,OAAOA,UAAU;AACnB,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOlB,EAAE,EAAEQ,WAAW,KAAK;EACtD,MAAMW,KAAK,GAAGpB,YAAY,CAACqB,SAAS,CAACP,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKA,EAAE,CAAC;EACtD,IAAImB,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;EACvC;EACAtB,YAAY,CAACoB,KAAK,CAAC,GAAG;IAAE,GAAGX,WAAW;IAAER;EAAG,CAAC;EAC5C,OAAOD,YAAY,CAACoB,KAAK,CAAC;AAC5B,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAOtB,EAAE,IAAK;EACzC,MAAMmB,KAAK,GAAGpB,YAAY,CAACqB,SAAS,CAACP,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKA,EAAE,CAAC;EACtD,IAAImB,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;EACvC;EACAtB,YAAY,CAACwB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;EAC7B,OAAO;IAAEK,OAAO,EAAE;EAAK,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}